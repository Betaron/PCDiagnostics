// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PCDiagnostics.Data;

#nullable disable

namespace PCDiagnostics.Data.Migrations
{
    [DbContext(typeof(PCDiagnosticsContext))]
    [Migration("20230116201930_addUserTable")]
    partial class addUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "hstore");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PCDiagnostics.Data.DbModels.Devices.DeviceDbModel", b =>
                {
                    b.Property<Guid>("DiagnosticId")
                        .HasColumnType("uuid")
                        .HasColumnName("diagnostic_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Dictionary<string, string>>("Specs")
                        .HasColumnType("hstore")
                        .HasColumnName("specs");

                    b.HasKey("DiagnosticId", "Name")
                        .HasName("pk_devices");

                    b.ToTable("devices", (string)null);
                });

            modelBuilder.Entity("PCDiagnostics.Data.DbModels.Diagnostics.DiagnosticDbModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("check_time");

                    b.HasKey("Id")
                        .HasName("pk_diagnostic_id");

                    b.ToTable("diagnostics", (string)null);
                });

            modelBuilder.Entity("PCDiagnostics.Data.DbModels.Users.UserDbModel", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.HasKey("Login")
                        .HasName("pk_login");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("PCDiagnostics.Data.DbModels.Devices.DeviceDbModel", b =>
                {
                    b.HasOne("PCDiagnostics.Data.DbModels.Diagnostics.DiagnosticDbModel", "Diagnostic")
                        .WithMany("Devices")
                        .HasForeignKey("DiagnosticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_devices_diagnostics_diagnostic_id");

                    b.Navigation("Diagnostic");
                });

            modelBuilder.Entity("PCDiagnostics.Data.DbModels.Diagnostics.DiagnosticDbModel", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
